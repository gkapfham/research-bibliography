% UNDERGRADUATE THESIS AND DISSERTATION

@phdthesis{Kapfhammer2007d,
  author = {Gregory M. Kapfhammer},
  title  = {A comprehensive framework for testing database-centric applications},
  school = {Department of Computer Science, University of Pittsburgh},
  year   = {2007},
  type   = {PhD thesis},
  keywords = {kapfhammer}
}

@techreport{Kapfhammer1999,
  author      = {Gregory M. Kapfhammer},
  title       = {A complex object data generator specification language to facilitiate automated data creation in software component test drivers},
  institution = {Department of Computer Science, Allegheny College},
  year        = {1999},
  number      = {CS99-07},
  type        = {Technical report},
  keywords    = {kapfhammer}
}

% BOOK CHAPTERS

@incollection{Kapfhammer2010,
  author       = {Gregory M. Kapfhammer},
  title        = {Regression testing},
  booktitle    = {The Encyclopedia of Software Engineering},
  publisher    = {Taylor and Francis -- Auerbach Publications},
  year         = {2010},
  abstract     = {Regression testing techniques execute a test suite whenever the addition of defect fixes or new
                  functionality changes the program under test. The repeated execution of a test suite aims to establish
                  a confidence in the correctness of the software application and identify defects that were introduced
                  by the program modifications. Industry experiences suggest that regression testing often improves the
                  quality of the application under test. However, testing teams may not always perform regression
                  testing because the frequent execution of the tests often incurs high time and space overheads. Test
                  suite selection techniques try to reduce the cost of testing by running a subset of the tests, such as
                  those that execute the modified source code, in order to ensure that the updated program still
                  operates correctly.  Alternatively, reduction methods decrease testing time overheads by discarding
                  the tests that redundantly cover the test requirements. Approaches to test suite prioritization
                  reorder the test cases in an attempt to maximize the rate at which the tests achieve a testing goal
                  such as code coverage. After describing a wide variety of metrics for empirically evaluating different
                  regression testing methods, this chapter considers the efficiency and effectiveness trade-offs
                  associated with these techniques. The conclusion of this article summarizes the state-of-the-art in
                  the field of regression testing and then offers suggestions for future work and resources for further
                  study.}
}

@incollection{Kapfhammer2004,
  author       = {Gregory M. Kapfhammer},
  title        = {Software testing},
  booktitle    = {The Computer Science Handbook},
  publisher    = {CRC Press},
  year         = {2004},
  abstract     = {Regression testing techniques execute a test suite whenever the addition of defect fixes or new
                  functionality changes the program under test. The repeated execution of a test suite aims to establish
                  a confidence in the correctness of the software application and identify defects that were introduced
                  by the program modifications. Industry experiences suggest that regression testing often improves the
                  quality of the application under test. However, testing teams may not always perform regression
                  testing because the frequent execution of the tests often incurs high time and space overheads. Test
                  suite selection techniques try to reduce the cost of testing by running a subset of the tests, such as
                  those that execute the modified source code, in order to ensure that the updated program still
                  operates correctly.  Alternatively, reduction methods decrease testing time overheads by discarding
                  the tests that redundantly cover the test requirements. Approaches to test suite prioritization
                  reorder the test cases in an attempt to maximize the rate at which the tests achieve a testing goal
                  such as code coverage. After describing a wide variety of metrics for empirically evaluating different
                  regression testing methods, this chapter considers the efficiency and effectiveness trade-offs
                  associated with these techniques. The conclusion of this article summarizes the state-of-the-art in
                  the field of regression testing and then offers suggestions for future work and resources for further
                  study.}
}

% CONFERENCE PAPERS

@inproceedings{Kapfhammer2016,
  author    = {Gregory M. Kapfhammer and Phil McMinn and Chris J. Wright},
  title     = {Hitchhikers need free vehicles! Shared repositories for statistical analysis in {SBST}},
  booktitle = {Proceedings of the 9th International Workshop on Search-Based Software Testing},
  year      = {2016},
  abstract  = {As a means for improving the maturity of the data analysis methods used in the search-based software testing
               field, this paper presents the need for shared repositories of well-documented statistical analysis code and
               replication data. In addition to explaining the benefits associated with using these repositories, the paper gives
               suggestions (e.g., the testing of analysis code) for improving the study of data arising from experiments with
               randomized algorithms.},
  paper     = {https://github.com/gkapfham/sbst2016-paper},
  presentation = {http://cdn.rawgit.com/gkapfham/sbst2016-presentation/master/sbst2016_position.html}
}

@inproceedings{McMinn2016,
  author    = {Phil McMinn and Mark Harman and Gordon Fraser and Gregory M. Kapfhammer},
  title     = {Automated search for good coverage criteria: Moving from code coverage to fault coverage through search-based software engineering},
  booktitle = {Proceedings of the 9th International Workshop on Search-Based Software Testing},
  year      = {2016},
  abstract  = {We propose to use Search-Based Software Engineering to automatically evolve coverage criteria that are
               well correlated with fault revelation, through the use of existing fault databases. We explain how
               problems of bloat and overfitting can be ameliorated in our approach, and show how this new method will
               yield insight into faults --- as well as better guidance for Search-Based Software Testing.},
  presented = {true}
}

@inproceedings{McMinn2016a,
  author    = {Phil McMinn and Gregory M. Kapfhammer and Chris J. Wright},
  title     = {Virtual mutation analysis of relational database schemas},
  booktitle = {Proceedings of the 11th International Workshop on Automation of Software Test},
  year      = {2016},
  abstract  = {Relational databases are a vital component of many modern software applications. Key to the definition
               of the database schema --- which specifies what types of data will be stored in the database and the
               structure in which the data is to be organized --- are integrity constraints. Integrity constraints are
               conditions that protect and preserve the consistency and validity of data in the database, preventing
               data values that violate their rules from being admitted into database tables. They encode logic about
               the application concerned, and like any other component of a software application, need to be properly
               tested. Mutation analysis is a technique that has been successfully applied to integrity constraint
               testing, seeding database schema faults of both omission and commission. Yet, as for traditional
               mutation analysis for program testing, it is costly to perform, since the test suite under analysis
               needs to be run against each individual mutant to establish whether or not it exposes the fault. One
               overhead incurred by database schema mutation is the cost of communicating with the database management
               system (DBMS). In this paper, we seek to eliminate this cost by performing mutation analysis virtually
               on a local model of the DBMS, rather than on an actual, running instance hosting a real database. We
               present an empirical evaluation of our virtual technique revealing that, across all of the studied
               DBMSs and schemas, the virtual method yields an average time saving of 51% over the baseline.},
  paper     = {https://github.com/gkapfham/ast2016-paper},
  data      = {https://github.com/gkapfham/virtualmutationanalysis},
  tool      = {https://github.com/schemaanalyst-team/schemaanalyst},
  presented = {true}
}

@inproceedings{McMinn2016b,
  author    = {Phil McMinn and Gregory M. Kapfhammer},
  title     = {AVMf: An open-source framework and implementation of the alternating variable method},
  booktitle = {Proceedings of the 8th International Symposium on Search-Based Software Engineering},
  year      = {2016},
  abstract  = {The Alternating Variable Method (AVM) has been shown to be a fast and effective local search technique
               for search-based software engineering. Recent improvements to the AVM have generalized the
               representations it can optimize and have provably reduced its running time. However, until now, there
               has been no general, publicly-available implementation of the AVM incorporating all of these
               developments. We introduce AVMf, an object-oriented Java framework that provides such an
               implementation. AVMf is available from http://avmframework.org for configuration and use in a wide
               variety of projects.},
  tool      = {https://github.com/AVMf/avmf}
}

@inproceedings{Kinneer2015,
  author    = {Cody Kinneer and Gregory M. Kapfhammer and Chris J. Wright and Phil McMinn},
  title     = {Automatically evaluating the efficiency of search-based test data generation for relational database schemas},
  booktitle = {Proceedings of the 27th International Conference on Software Engineering and Knowledge Engineering},
  year      = {2015},
  abstract  = {The characterization of an algorithm's worst-case time complexity is useful because it succinctly
               captures how its runtime will grow as the input size becomes arbitrarily large.  However, for certain
               algorithms --- such as those performing search-based test data generation --- a theoretical
               analysis to determine worst-case time complexity is difficult to generalize and thus not often reported
               in the literature.  This paper introduces a framework that empirically determines an algorithm's
               worst-case time complexity by doubling the size of the input and observing the change in runtime.
               Since the relational database is a centerpiece of modern software and the database's schema is
               frequently untested, we apply the doubling technique to the domain of data generation for relational
               database schemas, a field where worst-case time complexities are often unknown. In addition to
               demonstrating the feasibility of suggesting the worst-case runtimes of the chosen algorithms and
               configurations, the results of our study reveal performance trade-offs in testing strategies for
               relational database schemas.},
  paper     = {https://github.com/gkapfham/seke2015-paper},
  tool      = {https://github.com/kinneerc/ExpOse},
  presented = {true}
}

@inproceedings{Kinneer2015a,
  author    = {Cody Kinneer and Gregory M. Kapfhammer and Chris J. Wright and Phil McMinn},
  title     = {ExpOse: Inferring worst-case time complexity by automatic empirical study},
  booktitle = {Proceedings of the 27th International Conference on Software Engineering and Knowledge Engineering},
  year      = {2015},
  abstract  = {A useful understanding of an algorithm's efficiency, the worst-case time complexity gives an upper
               bound on how an increase in the size of the input, denoted n, increases the execution time of the
               algorithm, or f(n).  This relationship is often expressed in the "big-Oh" notation, where f(n) is
               O(g(n)) means that the time increases by no more than on order of g(n). Since the worst-case complexity
               of an algorithm is evident when n is large, one approach for determining the big-Oh complexity of an
               algorithm is to conduct a doubling experiment with increasingly bigger input sizes. By measuring the
               time needed to run the algorithm on inputs of size n and 2n, the algorithm's order of growth can be
               determined.  This paper introduces expOse, a tool to derive an "EXPerimental big-Oh" for supporting
               "Scalability Evaluation" --- expOse infers an algorithm's big-Oh order of growth by conducting a
               doubling experiment automatically.},
  paper     = {https://github.com/gkapfham/seke2015-tool-paper},
  tool      = {https://github.com/kinneerc/ExpOse},
}

@inproceedings{Walsh2015,
  author    = {Thomas A. Walsh and Phil McMinn and Gregory M. Kapfhammer},
  title     = {Automatic detection of potential layout faults following changes to responsive web pages},
  booktitle = {Proceedings of the 30th International Conference on Automated Software Engineering},
  year      = {2015},
  abstract  = {Due to the exponential increase in the number of mobile devices being used to access the World Wide
               Web, it is crucial that web sites are functional and user-friendly across a wide range of web-enabled
               devices.  This necessity has resulted in the introduction of responsive web design (RWD), which uses
               complex cascading style sheets (CSS) to fluidly modify a web site's appearance depending on the
               viewport width of the device in use. Although existing tools may support the testing of responsive web
               sites, they are time consuming and error-prone to use because they require manual screenshot inspection
               at specified viewport widths. Addressing these concerns, this paper presents a method that can
               automatically detect potential layout faults in responsively designed web sites. To experimentally
               evaluate this approach, we implemented it as a tool, called ReDeCheck, and applied it to 5 real-world
               web sites that vary in both their approach to responsive design and their complexity. The experiments
               reveal that ReDeCheck finds 91% of the inserted layout faults.},
  tool      = {https://github.com/schemaanalyst-team/schemaanalyst},
  presented = {true}
}

@inproceedings{Wright2014,
  author    = {Chris J. Wright and Gregory M. Kapfhammer and Phil McMinn},
  title     = {The impact of equivalent, redundant, and quasi mutants on database schema mutation analysis},
  booktitle = {Proceedings of the 14th International Conference on Quality Software},
  year      = {2014},
  abstract  = {Since the relational database is an important component of real-world software and the schema plays a
               major role in ensuring the quality of the database, relational schema testing is essential.  This paper
               presents methods for improving both the efficiency and accuracy of mutation analysis, an established
               method for assessing the quality of test cases for database schemas.  Using a DBMS-independent abstract
               representation, the presented techniques automatically identify and remove mutants that are either
               equivalent to the original schema, redundant with respect to other mutants, or undesirable because they
               are only valid for certain database systems. Applying our techniques for ineffective mutant removal to
               a variety of schemas, many of which are from real-world sources like the U.S. Department of Agriculture
               and the Stack Overflow website, reveals that the presented static analysis of the DBMS-independent
               representation is multiple orders of magnitude faster than a DBMS-specific method. The results also
               show increased mutation scores in 75% of cases, with 44% of those uncovering a mutation-adequate test
               suite. Combining the presented techniques yields mean efficiency improvements of up to 33.7%, with
               averages across schemas of 1.6% and 11.8% for HyperSQL and PostgreSQL, respectively.}
}

@inproceedings{Kotelyanskii2014a,
  author    = {Anton Kotelyanskii and Gregory M. Kapfhammer},
  title     = {Parameter tuning for search-based test-data generation revisited: Support for previous results},
  booktitle = {Proceedings of the 14th International Conference on Quality Software},
  year      = {2014},
  abstract  = {Although search-based test-data generators, like EvoSuite, efficiently and automatically create
               effective JUnit test suites for Java classes, these tools are often difficult to configure. Prior work
               by Arcuri and Fraser revealed that the tuning of EvoSuite with response surface methodology (RSM)
               yielded a configuration of the test data generator that did not outperform the default configuration.
               Following the experimental design and protocol described by Arcuri and Fraser, this paper presents the
               results of a study that lends further support to prior results: like RSM, the EvoSuite configuration
               identified by the well-known Sequential Parameter Optimization Toolbox (SPOT) failed to significantly
               outperform the default settings.  Although this result is negative, it furnishes further empirical
               evidence of the challenge associated with tuning a complex search-based test data generator.  Moreover,
               the outcomes of the presented experiments also suggests that EvoSuite's default parameters have been
               set by experts in the field and are thus suitable for use in future experimental studies and industrial
               testing efforts.}
}

@inproceedings{Kapfhammer2013,
  author    = {Gregory M. Kapfhammer and Phil McMinn and Chris J. Wright},
  title     = {Search-based testing of relational schema integrity constraints across multiple database management systems},
  booktitle = {Proceedings of the 6th International Conference on Software Testing, Verification and Validation},
  year      = {2013},
  abstract  = {There has been much attention to testing applications that interact with database management systems,
               and the testing of individual database management systems themselves. However, there has been very
               little work devoted to testing arguably the most important artefact involving an application supported
               by a relational database --- the underlying schema. This paper introduces a search-based technique
               for generating database table data with the intention of exercising the integrity constraints placed on
               table columns. The development of a schema is a process open to flaws like any stage of application
               development. Its cornerstone nature to an application means that defects need to be found early in
               order to prevent knock-on effects to other parts of a project and the spiralling bug-fixing costs that
               may be incurred. Examples of such flaws include incomplete primary keys, incorrect foreign keys, and
               omissions of NOT NULL declarations.  Using mutation analysis, this paper presents an empirical study
               evaluating the effectiveness of our proposed technique and comparing it against a popular tool for
               generating table data, DBMonster. With competitive or faster data generation times, our method
               outperforms DBMonster in terms of both constraint coverage and mutation score.}
}

@inproceedings{Wright2013,
  author    = {Chris J. Wright and Gregory M. Kapfhammer and Phil McMinn},
  title     = {Efficient mutation analysis of relational database structure using mutant schemata and parallelisation},
  booktitle = {Proceedings of the 8th International Workshop on Mutation Analysis},
  year      = {2013},
  abstract  = {Mutation analysis is an effective way to assess the quality of input values and test oracles. Yet, since
               this technique requires the generation and execution of many mutants, it often incurs a substantial
               computational cost. In the context of program mutation, the use of mutant schemata and parallelisation
               can reduce the costs of mutation analysis. This paper is the first to apply these approaches to the
               mutation analysis of a relational database schema, arguably one of the most important artefacts in a
               database application. Using a representative set of case studies that vary in both their purpose and
               structure, this paper empirically compares an unoptimised method to four database structure mutation
               techniques that intelligently employ both mutant schemata and parallelisation. The results of the
               experimental study highlight the performance trade-offs that depend on the type of database management
               system (DBMS), underscoring the fact that every DBMS does not support all types of efficient mutation
               analysis. However, the experiments also identify a method that yields a one to ten times reduction in the
               cost of mutation analysis for relational schemas hosted by both the Postgres and SQLite DBMSs.}
}

@inproceedings{Lin2013,
  author    = {Lin, Chu-Ti and Chen, Cheng-Ding and Tsai, Chang-Shi and Kapfhammer, Gregory M.},
  title     = {History-based test case prioritization with software version awareness},
  booktitle = {Proceedings of the 18th International Conference on Engineering of Complex Computer Systems},
  year      = {2013},
  abstract  = {Test case prioritization techniques schedule the test cases in an order based on some specific criteria so
               that the tests with better fault detection capability are executed at an early position in the regression
               test suite. Many existing test case prioritization approaches are code-based, in which the testing of each
               software version is considered as an independent process. Actually, the test results of the preceding
               software versions may be useful for scheduling the test cases of the later software versions. Some
               researchers have proposed history-based approaches to address this issue, but they assumed that the
               immediately preceding test result provides the same reference value for prioritizing the test cases of the
               successive software version across the entire lifetime of the software development process. Thus, this
               paper describes ongoing research that studies whether the reference value of the immediately preceding
               test results is version-aware and proposes a test case prioritization approach based on our observations.
               The experimental results indicate that, in comparison to existing approaches, the presented one can
               schedule test cases more effectively.}
}

@inproceedings{Just2012a,
  author    = {Ren\'{e} Just and Gregory M. Kapfhammer and Franz Schweiggert},
  title     = {Do redundant mutants affect the effectiveness and efficiency of mutation analysis?},
  booktitle = {Proceedings of the 7th International Workshop on Mutation Analysis},
  year      = {2012}
}

@inproceedings{Kauffman2012a,
  author    = {Jonathan Miller Kauffman and Gregory M. Kapfhammer},
  title     = {A framework to support research in and encourage industrial adoption of regression testing techniques},
  booktitle = {Proceedings of the 7th Testing: Academic and Industrial Conference -- Practice and Research Techniques},
  year      = {2012}
}

@inproceedings{Kapfhammer2012a,
  author    = {Gregory M. Kapfhammer},
  title     = {Towards a method for reducing the test suites of database applications},
  booktitle = {Poster Compendium of the 5th International Conference on Software Testing, Verification and Validation},
  year      = {2012},
}

@inproceedings{Clark2011,
  author    = {Clark, Sarah R. and Cobb, Jake and Kapfhammer, Gregory M. and Jones, James A. and Harrold, Mary Jean},
  title     = {Localizing SQL faults in database applications},
  booktitle = {Proceedings of the 26th International Conference on Automated Software Engineering},
  year      = {2011}
}

@inproceedings{Just2011,
  author    = "Ren\'{e} Just and Gregory M. Kapfhammer",
  title     = "MAJOR: An efficient technique for mutation analysis in a Java compiler",
  booktitle = "Poster Compendium of the 4th International Conference on Software Testing, Verification and Validation",
  year      = "2011"
}

@inproceedings{Kapfhammer2011,
  author    = {Gregory M. Kapfhammer},
  title     = {Empirically evaluating regression testing techniques: Challenges, solutions, and a potential way forward},
  booktitle = {Proceedings of the 1st International Workshop on Regression Testing},
  year      = {2011}
}

@inproceedings{Just2011a,
  author    = {Just, Ren{\'e} and Kapfhammer, Gregory M. and Schweiggert, Franz},
  title     = {Using conditional mutation to increase the efficiency of mutation analysis},
  booktitle = {Proceedings of the 6th International Workshop on Automation of Software Test},
  year      = {2011}
}

@inproceedings{Jones2011,
  author    = {William F. Jones and Gregory M. Kapfhammer},
  title     = {Ask and you shall receive: Empirically evaluating declarative approaches to finding data in unstructured heaps},
  booktitle = {Proceedings of the 20th International Conference on Software Engineering and Data Engineering},
  year      = {2011}
}

@inproceedings{Yalan2011,
  author    = {Liang Yalan and Changhai Nie and Jonathan M. Kauffman and Gregory M. Kapfhammer and Hareton Leung},
  title     = {Empirically identifying the best genetic algorithm for covering array generation},
  booktitle = {Fast Abstract Compendium of the 3rd International Symposium on Search Based Software Engineering},
  year      = {2011}
}

@inproceedings{Cobb2011,
  author    = {Cobb, Jake and Jones, James A. and Kapfhammer, Gregory M. and Harrold, Mary Jean},
  title     = {Dynamic invariant detection for relational databases},
  booktitle = {Proceedings of the 9th International Workshop on Dynamic Analysis},
  year      = {2011}
}

@inproceedings{Just2011b,
  author    = {Just, Ren{\'e} and Kapfhammer, Gregory M. and Schweiggert, Franz},
  title     = {MAJOR: An efficient and extensible tool for mutation analysis in a Java compiler},
  booktitle = {Proceedings of the 26th International Conference on Automated Software Engineering},
  year      = {2011}
}

@inproceedings{Conrad2010a,
  author    = {Conrad, Alexander P. and Roos, Robert S. and Kapfhammer, Gregory M.},
  title     = {Empirically studying the role of selection operators during search-based test suite prioritization},
  booktitle = {Proceedings of the 12th International Conference on Genetic and Evolutionary Computation},
  year      = {2010},
  keywords  = {award}
}

@inproceedings{Kukunas2010a,
  author    = {Kukunas, James and Cupper, Robert D. and Kapfhammer, Gregory M.},
  title     = {A genetic algorithm to improve Linux kernel performance on resource-constrained devices},
  booktitle = {Proceedings of the 12th International Conference Companion on Genetic and Evolutionary Computation},
  year      = {2010}
}

@inproceedings{Williams2010,
  author    = {Zachary Williams and Gregory M. Kapfhammer},
  title     = {Using synthetic test suites to empirically compare search-based and greedy prioritizers},
  booktitle = {Proceedings of the 12th International Conference Companion on Genetic and Evolutionary Computation},
  year      = {2010}
}

@inproceedings{Smith2009,
  author    = {Smith, Adam M. and Kapfhammer, Gregory M.},
  title     = {An empirical study of incorporating cost into test suite reduction and prioritization},
  booktitle = {Proceedings of the 24th Symposium on Applied Computing},
  year      = {2009}
}

@inproceedings{Bhadra2009,
  author    = {Suvarshi Bhadra and Alexander P. Conrad and Charles P. Hurkes and Brian Kirklin and Gregory M. Kapfhammer},
  title     = {An experimental study of methods for executing test suites in memory constrained environments},
  booktitle = {Proceedings of the 4th International Workshop on the Automation of Software Test},
  year      = {2009}
}

@inproceedings{Smith2009a,
  author    = {Adam M. Smith and Joshua J. Geiger and Gregory M. Kapfhammer and Manos Renieris and G. Elisabeta Marai},
  title     = {Interactive coverage effectiveness multiplots for evaluating prioritized regression test suites},
  booktitle = {Compendium of the 15th Information Visualization Conference},
  year      = {2009}
}

@inproceedings{Ostrofsky2009,
  author    = {Erik Ostrofsky and Gregory M. Kapfhammer},
  booktitle = {Poster Compendium of the 3rd International Symposium on Empirical Software Engineering and Measurement},
  title     = {An empirical comparison of methods for compressing test coverage reports},
  year      = {2009}
}

@inproceedings{Kapfhammer2008,
  author={Gregory M. Kapfhammer and Mary Lou Soffa},
  title={Database-aware test coverage monitoring},
  booktitle={Proceedings of the 1st India Software Engineering Conference},
  year={2008}
}

@inproceedings{Bhadra2008a,
  author    = "Suvarshi Bhadra and Gregory M. Kapfhammer",
  title     = "Prioritizing test suites by finding Hamiltonian paths: Preliminary studies and initial results",
  booktitle = "Fast Abstract Compendium of the 7th Testing: Academic and Industrial Conference -- Practice and Research Techniques",
  year      = "2008"
}

@inproceedings{Smith2007b,
  author    = {Adam M. Smith and Joshua J. Geiger and Gregory M. Kapfhammer and Mary Lou Soffa},
  title     = {Test suite reduction and prioritization with call trees},
  booktitle = {Proceedings of the 22nd International Conference on Automated Software Engineering},
  year      = {2007}
}

@inproceedings{Kapfhammer2007,
  author    = {Gregory M. Kapfhammer and Mary Lou Soffa},
  title     = {Using coverage effectiveness to evaluate test suite prioritizations},
  booktitle = {Proceedings of the International Workshop on Empirical Assessment of Software Engineering Languages and Technologies},
  year      = {2007}
}

@inproceedings{Kapfhammer2007a,
  author    = {Sara Alspaugh and Kristen R. Walcott and Michael Belanich and Gregory M. Kapfhammer and Mary Lou Soffa},
  title     = {Efficient time-aware prioritization with knapsack solvers},
  booktitle = {Proceedings of the International Workshop on Empirical Assessment of Software Engineering Languages and Technologies},
  year      = {2007}
}

@inproceedings{Walcott2006,
  author    = {Kristen R. Walcott and Mary Lou Soffa and Gregory M. Kapfhammer and Robert S. Roos},
  title     = {Time-aware test suite prioritization},
  booktitle = {Proceedings of the International Symposium on Software Testing and Analysis},
  year      = {2006}
}

@inproceedings{Rummel2005a,
  author    = {Matthew J. Rummel and Gregory M. Kapfhammer and Andrew Thall},
  title     = {Towards the prioritization of regression test suites with data flow information},
  booktitle = {Proceedings of the 20th Symposium on Applied Computing},
  year      = {2005}
}

@inproceedings{Kapfhammer2005,
  author    = {Gregory M. Kapfhammer and Mary Lou Soffa and Daniel Moss\'{e}},
  title     = {Testing in resource-constrained execution environments},
  booktitle = {Proceedings of the 20th International Conference on Automated Software Engineering},
  year      = {2005}
}

@inproceedings{Howell2003a,
  author    = {Christopher J. Howell and Gregory M. Kapfhammer and Robert S. Roos},
  title     = {An examination of the run-time performance of GUI creation frameworks},
  booktitle = {Proceedings of the 2nd International Conference on the Principles and Practice of Programming in Java},
  year      = {2003}
}

@inproceedings{Kapfhammer2003,
  author    = {Gregory M. Kapfhammer and Mary Lou Soffa},
  title     = {A family of test adequacy criteria for database-driven applications},
  booktitle = {Proceedings of the 9th European Software Engineering Conference and the 11th Symposium on the Foundations of Software Engineering},
  year      = {2003}
}

@inproceedings{Haddox2002,
  author    = {Jennifer Haddox and Gregory M. Kapfhammer and C.C. Michael},
  title     = {An approach for understanding and testing third-party software components},
  booktitle = {Proceedings of the 48th Reliability and Maintainability Symposium},
  year      = {2002}
}

@inproceedings{Arnold2002a,
  author    = {Geoffrey C. Arnold and Gregory M. Kapfhammer and Robert S. Roos},
  title     = {Implementation and analysis of a JavaSpace supported by a relational database},
  booktitle = {Proceedings of the 8th International Conference on Parallel and Distributed Processing Techniques and Applications},
  year      = {2002}
}

@inproceedings{Zorman2002a,
  author    = {Brian Zorman and Gregory M. Kapfhammer and Robert S. Roos},
  title     = {Creation and analysis of a JavaSpace-based genetic algorithm},
  booktitle = {Proceedings of the 8th International Conference on Parallel and Distributed Processing Techniques and Applications},
  year      = {2002}
}

@inproceedings{Bittman2001a,
  author    = {Marcus Bittman and Robert S. Roos and Gregory M. Kapfhammer},
  title     = {Creating a free, dependable software engineering environment for building Java applications},
  booktitle = {Proceedings of the 1st International Workshop on Open Source Software Engineering},
  year      = {2001}
}

@inproceedings{Haddox2001,
  author    = {Jennifer Haddox and Gregory M. Kapfhammer and C.C. Michael and Michael Schatz},
  title     = {Testing commercial-off-the-shelf components with software wrappers},
  booktitle = {Proceedings of the 18th International Conference on Testing Computer Software},
  year      = {2001}
}

@inproceedings{Kapfhammer2001,
  author    = {Gregory M. Kapfhammer},
  title     = {Automatically and transparently distributing the execution of regression test suites},
  booktitle = {Proceedings of the 18th International Conference on Testing Computer Software},
  year      = {2001}
}

@inproceedings{Kapfhammer2000,
  author    = {Gregory M. Kapfhammer and C.C. Michael and Jennifer Haddox and Ryan Colyer},
  title     = {An approach to identifying and understanding problematic COTS components},
  booktitle = {Proceedings of the 2nd International Software Assurance and Certification Conference},
  year      = {2000}
}

% JOURNAL PAPERS

@article{McMinn2015,
  author  = {McMinn, Phil and Wright, Chris J. and Kapfhammer, Gregory M.},
  title   = {The effectiveness of test coverage criteria for relational
             database schema integrity constraints},
  journal = {Transactions on Software Engineering and Methodology},
  volume  = {25},
  number  = {1},
  year    = {2015},
  abstract = {Despite industry advice to the contrary, there has been little work that has sought to test that a
              relational database's schema has correctly specified integrity constraints. These critically important
              constraints ensure the coherence of data in a database, defending it from manipulations that could violate
              requirements such as "usernames must be unique" or "the host name cannot be missing or unknown". This
              paper is the first to propose coverage criteria, derived from logic coverage criteria, that establish
              different levels of testing for the formulation of integrity constraints in a database schema. These range
              from simple criteria that mandate the testing of successful and unsuccessful INSERT statements into tables
              to more advanced criteria that test the formulation of complex integrity constraints such as multi-column
              PRIMARY KEYS and arbitrary CHECK constraints. Due to different vendor interpretations of the structured
              query language (SQL) specification with regard to how integrity constraints should actually function in
              practice, our criteria crucially account for the underlying semantics of the database management system
              (DBMS).  After formally defining these coverage criteria and relating them in a subsumption hierarchy, we
              present two approaches to automatically generating tests that satisfy the criteria.  We then describe the
              results of an empirical study that uses mutation analysis to investigate the fault-finding capability of
              data generated when our coverage criteria are applied to a wide variety of relational schemas hosted by
              three well-known and representative DBMSs --- HyperSQL, PostgreSQL and SQLite.  In addition to revealing
              the complementary fault-finding capabilities of the presented criteria, the results show that mutation
              scores range from as low as just 12% of mutants being killed with the simplest of criteria to 96% with
              the most advanced.},
  tool      = {https://github.com/schemaanalyst-team/schemaanalyst}
}

@article{Lin2014,
  author  = {Lin, Chu-Ti and Tang, Kai-Wei and Kapfhammer, Gregory M.},
  title   = {Test suite reduction methods that decrease regression testing costs by identifying irreplaceable tests},
  journal = {Information and Software Technology},
  volume  = {56},
  number  = {10},
  year    = {2014},
  abstract = {<em>Context</em>: In software development and maintenance, a software system may frequently be updated to
              meet rapidly changing user requirements. New test cases will be designed to ensure the correctness of new or
              modified functions, thus gradually increasing the test suite’s size. Test suite reduction techniques aim to
              decrease the cost of regression testing by removing the redundant test cases from the test suite and then
              obtaining a representative set of test cases that still yield a high level of code coverage. <p>
              <em>Objective</em>: Most of the existing reduction algorithms focus on decreasing the test suite’s size.
              Yet, the differences in execution costs among test cases are usually significant and it may take a lot of
              execution time to run a test suite consisting of a few long-running test cases. This paper presents and
              empirically evaluates cost-aware algorithms that can produce the representative sets with lower execution
              costs. <p> <em>Method</em>: We first use a cost-aware test case metric, called Irreplaceability, and its
              enhanced version, called EIrreplaceability, to evaluate the possibility that each test case can be replaced
              by others during test suite reduction. Furthermore, we construct a cost-aware framework that incorporates
              the concept of test irreplaceability into some well-known test suite reduction algorithms.  <p>
              <em>Results</em>: The effectiveness of the cost-aware framework is evaluated via the subject programs and
              test suites collected from the Software-artifact Infrastructure Repository --- frequently chosen benchmarks
              for experimentally evaluating test suite reduction methods. The empirical results reveal that the presented
              algorithms produce representative sets that normally incur a low cost to yield a high level of test
              coverage.  <p> <em>Conclusion</em>: The presented techniques indeed enhance the capability of the
              traditional reduction algorithms to reduce the execution cost of a test suite. Especially for the additional
              Greedy algorithm, the presented techniques decrease the costs of the representative sets by 8.10 -- 46.57%}
}

@article{Burdette2012,
  author  = {Philip F. Burdette and William F. Jones and Brian C. Blose and Gregory M. Kapfhammer},
  journal = {ACM SIGMETRICS Performance Evaluation Review},
  title   = {An empirical comparison of Java remote communication primitives for intra-node data transmission},
  year    = {2012},
  month   = {April},
  volume  = {39},
  number  = {4}
}

@article{Fiedler2005,
  author  = {Daniel Fiedler and Kristen R. Walcott and Thomas Richardson and Gregory M. Kapfhammer and Ahmed Amer and Panos K. Chrysanthis},
  journal = {ACM SIGMETRICS Performance Evaluation Review},
  title   = {Towards the measurement of tuple space performance},
  year    = {2005},
  month   = {December},
  volume  = {33},
  number  = {3}
}

% VOLUMES EDITED

@article{Chan2011,
  author   = {Wing-Kwong Chan and Christof J. Budnik and Gregory M. Kapfhammer and Hong Zhu},
  journal  = {Software Quality Journal},
  title    = {Special section: Exploring the boundaries of software test automation},
  year     = {2011},
  volume   = {19},
  number   = {3},
  keywords = {edit},
}

@article{Bottaci2010,
  author   = {Leonardo Bottaci and Gregory M. Kapfhammer and Marc Roper},
  journal  = {Information and Software Technology},
  title    = {Special section of selected papers from the Testing: {Academic} and {Industrial} {Conference} -- {Practice} and {Research} {Techniques}},
  year     = {2010},
  volume   = {52},
  number   = {5},
  keywords = {edit},
}

@article{Bottaci2010a,
  author   = {Leonardo Bottaci and Gregory M. Kapfhammer and Neil Walkinshaw},
  journal  = {Journal of Systems and Software},
  title    = {Special section of selected papers from the Testing: {Academic} and {Industrial} {Conference} -- {Practice} and {Research} {Techniques}},
  year     = {2010},
  volume   = {83},
  number   = {12},
  keywords = {edit},
}

@article{Laplante2010,
  author = {Philip Laplante and Fevzi Belli and Jerry Gao and Gregory M. Kapfhammer and Keith Miller and W.
            Eric Wong},
  journal  = {Advances in Software Engineering},
  title    = {Special issue: Software test automation},
  year     = {2010},
  keywords = {edit},
}

% PRESENTATIONS

@misc{Kapfhammer2015a,
  author       = {Gregory M. Kapfhammer},
  title        = {Is big data a big deal? Not without correct software!},
  howpublished = {At the 27th International Conference on Software Engineering and Knowledge Engineering},
  year         = {2015},
  presentation = {http://cdn.rawgit.com/gkapfham/seke2015-panel-presentation/master/seke2015_panel.html}
}

@misc{Kapfhammer2015,
  author       = {Gregory M. Kapfhammer},
  title        = {Searching for the best tests: An introduction to automated software testing with search-based techniques},
  howpublished = {At Allegheny College, Department of Computer Science Colloquium},
  year         = {2015}
}

@misc{Kapfhammer2012,
  author       = {Gregory M. Kapfhammer},
  title        = {Using dynamic invariant detection to support the testing and analysis of database applications},
  howpublished = {At the University of Ulm},
  year         = {2012},
  addendum     = {Joint work with Jake Cobb, James A.\ Jones, Mary Jean Harrold, and Jonathan Miller Kauffman}
}

@misc{Kapfhammer2012pa,
  author       = {Gregory M. Kapfhammer},
  title        = {Regression testing techniques for relational database applications},
  howpublished = {At the University of Ulm},
  year         = {2012},
  addendum     = {Joint work with Jonathan Miller Kauffman and Mary Lou Soffa}
}

@misc{Kapfhammer2012pb,
  author       = {Gregory M. Kapfhammer},
  title        = {Practical techniques for improving the efficiency and usability of mutation analysis for Java programs},
  howpublished = {At the University of Sheffield},
  year         = {2012},
  addendum     = {Joint work with Ren\'{e} Just and Franz Schweiggert}
}

@misc{Kapfhammer2012pc,
  author = {Gregory M. Kapfhammer},
  title  = {Efficient and effective mutation testing: Supporting the implementation of quality software by
            purposefully inserting defects},
  howpublished = {At the University of Delhi},
  year         = {2012},
  addendum     = {Joint work with Ren\'{e} Just and Franz Schweiggert}
}

@misc{Kapfhammer2012pd,
  author = {Gregory M. Kapfhammer},
  title  = {Software quality improvement through repeated test execution: An exploration of the present and
            future of regression testing},
  howpublished = {At the University of Delhi},
  year         = {2012},
  addendum     = {Joint work with Jonathan Miller Kauffman}
}

@misc{Kapfhammer2011pa,
  author       = {Gregory M. Kapfhammer},
  title        = {Regression testing: Theoretical underpinnings, practical techniques, and empirical insights},
  howpublished = {At the 15th International Conference on Software Engineering and Applications},
  year         = {2011},
  addendum     = {Joint work with Jonathan Miller Kauffman}
}

@misc{Kapfhammer2009pa,
  author = {Gregory M. Kapfhammer},
  title  = {Practical suggestions for improving and empirically studying greedy test suite reduction and
            prioritization methods},
  howpublished = {At Nanjing University},
  year         = {2009},
  addendum     = {Joint work with Joshua J. Geiger, G. Elisabeta Marai, Manos Renieris, and Adam M. Smith}
}

@misc{Kapfhammer2009pb,
  author       = {Gregory M. Kapfhammer},
  title        = {The measured performance of declarative approaches to finding data in unstructured heaps},
  howpublished = {At Westminster College},
  year         = {2009},
  addendum     = {Joint work with William F. Jones}
}

@misc{Kapfhammer2008pa,
  author       = {Gregory M. Kapfhammer},
  title        = {The theory and practice of software testing: Can we test it? Yes we can!},
  howpublished = {At Symcon Global Technologies India},
  year         = {2008},
  addendum     = {Joint work with Suvarshi Bhadra, Adam M. Smith, Mary Lou Soffa, and Kristen R. Walcott}
}

@misc{Kapfhammer2008pb,
  author       = {Gregory M. Kapfhammer},
  title        = {Set covers, knapsacks, and regression testing techniques},
  howpublished = {At Madras Christian College},
  year         = {2008},
  addendum     = {Joint work with Suvarshi Bhadra, Adam M. Smith, Mary Lou Soffa, and Kristen R. Walcott}
}

@misc{Kapfhammer2008pc,
  author       = {Gregory M. Kapfhammer},
  title        = {Using synthetic coverage information to evaluate test suite prioritizers},
  howpublished = {At the Chennai Mathematical Institute},
  year         = {2008},
  addendum     = {Joint work with Suvarshi Bhadra and Yuting Zhang}
}

@misc{Kapfhammer2008pd,
  author       = {Gregory M. Kapfhammer},
  title        = {Can search-based prioritizers improve the coverage effectiveness of regression test suites?},
  howpublished = {At King's College London},
  year         = {2008},
  addendum     = {Joint work with Alexander P. Conrad}
}

@misc{Kapfhammer2007p,
  author       = {Gregory M. Kapfhammer},
  title        = {Automatic program instrumentation to the rescue!},
  howpublished = {At the Allegheny College Research in Computer Science Seminar},
  year         = {2007},
  addendum     = {Joint work with Mary Lou Soffa}
}

@misc{Kapfhammer2007pa,
  author       = {Gregory M. Kapfhammer},
  title        = {The measured performance of communication and serialization primitives},
  howpublished = {At the NITLE Workshop on Parallel and Cluster Computing},
  year         = {2007},
  addendum     = {Joint work with Brian C. Blose and Philip P. Burdette}
}

@misc{Kapfhammer2007pb,
  author       = {Gregory M. Kapfhammer},
  title        = {The measured performance of database-aware test coverage monitoring},
  howpublished = {At the University of Pittsburgh, Department of Computer Science Colloquium},
  year         = {2007},
  addendum     = {Joint work with Mary Lou Soffa}
}

@misc{Kapfhammer2007pc,
  author       = {Gregory M. Kapfhammer},
  title        = {Exploring approaches to time-aware test suite prioritization},
  howpublished = {At Microsoft Research Asia},
  year         = {2007},
  addendum     = {Joint work with Mary Lou Soffa and Kristen R. Walcott}
}

@misc{Kapfhammer2007pd,
  author       = {Gregory M. Kapfhammer},
  title        = {Measuring the performance of an XML-based communication primitive},
  howpublished = {At the Allegheny College Research in Computer Science Seminar},
  year         = {2006},
  addendum     = {Joint work with Brian C. Blose}
}

@misc{Kapfhammer2005p,
  author       = {Gregory M. Kapfhammer},
  title        = {SETTLE: A tuple space benchmarking and testing framework},
  howpublished = {At the 9th Jini Community Meeting},
  year         = {2005},
  addendum     = {Joint work with Ahmed Amer, Panos K. Chrysanthis, Daniel Fiedler, Thomas Richardson, and Kristen R. Walcott}
}

@misc{Kapfhammer2005pa,
  author       = {Gregory M. Kapfhammer},
  title        = {Further experience with teaching distributed systems to undergraduates},
  howpublished = {At the 9th Jini Community Meeting},
  year         = {2005}
}

@misc{Kapfhammer2005pb,
  author       = {Gregory M. Kapfhammer},
  title        = {A test adequacy infrastructure with database interaction awareness},
  howpublished = {At the University of California, Santa Barbara, Department of Computer Science
                  Colloquium},
  year     = {2005},
  addendum = {Joint work with Mary Lou Soffa}
}

@misc{Kapfhammer2005pc,
  author       = {Gregory M. Kapfhammer},
  title        = {Empirical evaluation of an approach to resource-constrained test suite execution},
  howpublished = {At the University of Pittsburgh, Department of Computer Science Colloquium},
  year         = {2005},
  addendum     = {Joint work with Daniel Moss\'{e} and Mary Lou Soffa}
}

@misc{Kapfhammer2004p,
  author       = {Gregory M. Kapfhammer},
  title        = {Testing database-driven applications: Challenges and solutions},
  howpublished = {At the IBM T.J. Watson Research Center},
  year         = {2004},
  addendum     = {Joint work with Mary Lou Soffa}
}

@misc{Kapfhammer2004pa,
  author       = {Gregory M. Kapfhammer},
  title        = {A primer on testing database-driven applications},
  howpublished = {At the Allegheny College Intramural Faculty Conference},
  year         = {2004},
  addendum     = {Joint work with Mary Lou Soffa}
}

@misc{Kapfhammer2002pa,
  author       = {Gregory M. Kapfhammer},
  title        = {Towards a JavaSpace supported by a relational database},
  howpublished = {At the 6th Jini Community Meeting},
  year         = {2002},
  addendum     = {Joint work with Geoffrey C. Arnold and Robert S. Roos}
}

@misc{Kapfhammer2002pb,
  author       = {Gregory M. Kapfhammer},
  title        = {Building distributed genetic algorithms with the Jini network technology},
  howpublished = {At the 6th Jini Community Meeting},
  year         = {2002},
  addendum     = {Joint work with Robert S. Roos and Brian Zorman}
}

@misc{Kapfhammer2002pc,
  author       = {Gregory M. Kapfhammer},
  title        = {Improving the Jini out-of-box experience: lessons learned and solutions provided},
  howpublished = {At the 6th Jini Community Meeting},
  year         = {2002},
  addendum     = {Joint work with Geoffrey C. Arnold, Charles R. DiVittorio, Brian Hykes,
                  Mehrnoush Moussavi-Aghdam, and James E. Tomayko}
}

@misc{Kapfhammer2002pd,
  author       = {Gregory M. Kapfhammer},
  title        = {Teaching distributed systems to undergraduates: An experience report},
  howpublished = {At the 6th Jini Community Meeting},
  year         = {2002}
}

@misc{Kapfhammer2000pe,
  author       = {Gregory M. Kapfhammer},
  title        = {An automated wrapping system for Java components and Jini services},
  howpublished = {At the 17th International Conference on Testing Computer Software},
  year         = {2000}
}

% TECHNICAL REPORTS (BACHELORS THESES)

@techreport{Cambier2015,
  author      = {Ryan Cambier},
  title       = {Stock forecasting using genetic fuzzy systems},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2015},
  number      = {CS15-01},
  type        = {Technical report},
  keywords    = {undergraduate}
}

@techreport{Challener2015,
  author      = {Tristan Challener},
  title       = {A system for statistical comparison of risk evaluation functions},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2015},
  number      = {CS15-02},
  type        = {Technical report},
  keywords    = {undergraduate}
}

@techreport{Jordan2015,
  author      = {Mackenzie Jordan},
  title       = {Applied interactive design: A database-driven website},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2015},
  number      = {CS15-03},
  type        = {Technical report},
  keywords    = {undergraduate}
}

@techreport{King2015,
  author      = {Kara King},
  title       = {Static analysis tool for {SQL} {CREATE} {TABLE} statements},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2015},
  number      = {CS15-04},
  type        = {Technical report},
  keywords    = {undergraduate},
  addendum    = {\gosecond \gospace \gofaculty}
}

@techreport{Sherretts2015,
  author      = {Marlee Sherretts},
  title       = {Using dynamic invariant detection and static visualization to find faults in spreadsheets},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2015},
  number      = {CS15-07},
  type        = {Technical report},
  keywords    = {undergraduate}
}

@techreport{Corona2014,
  author      = {Marco Corona},
  title       = {An empirical evaluation of mutation-based fault localization for relational database structures},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2014},
  number      = {CS14-04},
  type        = {Technical report},
  keywords    = {undergraduate}
}

@techreport{Doughty2014,
  author      = {Reighr Doughty},
  title       = {How does haptic feedback influence Android device users' input accuracy?},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2014},
  number      = {CS14-06},
  type        = {Technical report},
  keywords    = {undergraduate}
}

@techreport{Douglas2014,
  author      = {Issam Douglas},
  title       = {Evaluating Android anti-malware programs and examining Android malware},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2014},
  number      = {CS14-07},
  type        = {Technical report},
  keywords    = {undergraduate}
}

@techreport{Graham2014,
  author      = {Brian Graham},
  title       = {A survey of data mining with a comparative analysis of algorithms},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2014},
  number      = {CS14-08},
  type        = {Technical report},
  keywords    = {undergraduate}
}

@techreport{Hajduk2014,
  author      = {Matthew J. Hajduk},
  title       = {Interactive data visualization integrated with the Leap Motion},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2014},
  number      = {CS14-09},
  type        = {Technical report},
  keywords    = {undergraduate}
}

@techreport{Kotelyanskii2014,
  author      = {Anton Kotelyanskii},
  title       = {A comparison of parameter optimization techniques as applied to search-based test data generation},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2014},
  number      = {CS14-10},
  type        = {Technical report},
  keywords    = {undergraduate}
}

@techreport{Regel2014,
  author = {Shane Regel},
  title  = {Using association rule mining to uncover statistical relationships among playoff teams
            during the steroid era of Major League Baseball},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2014},
  number      = {CS14-10},
  type        = {Technical report},
  keywords    = {undergraduate}
}

@techreport{Engelhardt2013,
  author      = {Eric Engelhardt},
  title       = {Using {IOzone} to measure the cost of using hard disk and solid state drives},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2013},
  number      = {CS13-01},
  type        = {Technical report},
  keywords    = {undergraduate}
}

@techreport{Kuehn2013,
  author      = {Tyler Kuehn},
  title       = {Comparing common clustering algorithms for video game matchmaking},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2013},
  number      = {CS13-04},
  type        = {Technical report},
  keywords    = {undergraduate}
}

@techreport{Rocks2013,
  author      = {Brian Rocks},
  title       = {Developing a visualization program for demonstrating maze solver operation},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2013},
  number      = {CS13-05},
  type        = {Technical report},
  keywords    = {undergraduate}
}

@techreport{Kauffman2012,
  author      = {Jonathan Miller Kauffman},
  title       = {An empirical evaluation of test suite reduction and prioritization techniques},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2012},
  number      = {CS12-03},
  type        = {Technical report},
  keywords    = {undergraduate},
  addendum    = {\gofaculty}
}

@techreport{Elliott2011,
  author      = {Neil Elliott},
  title       = {Using artificial fault injection to support test suite prioritization},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2011},
  number      = {CS11-04},
  type        = {Technical report},
  keywords    = {undergraduate},
  addendum    = {\goacm}
}

@techreport{Kukunas2010,
  author      = {James T. Kukunas},
  title       = {A genetic algorithm to improve kernel performance on resource-constrained devices},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2010},
  number      = {CS10-02},
  type        = {Technical report},
  keywords    = {undergraduate},
  addendum    = {\goacm}
}

@techreport{Striegel2010,
  author      = {Benjamin Striegel},
  title       = {Snowcover: An experimental framework for distributed search-based test suite prioritization},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2010},
  number      = {CS10-04},
  type        = {Technical report},
  keywords    = {undergraduate},
}

@techreport{Conrad2009,
  author      = {Alexander P. Conrad},
  title       = {Test suite prioritization with greedy and genetic algorithms},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2009},
  number      = {CS09-01},
  type        = {Technical report},
  keywords    = {undergraduate},
  addendum    = {\goacm}
}

@techreport{Hurkes2009,
  author      = {Charles P. Hurkes},
  title       = {Performing {APFD}-based prioritization with synthetic fault data},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2009},
  number      = {CS09-02},
  type        = {Technical report},
  keywords    = {undergraduate}
}

@techreport{Kirklin2009,
  author      = {Brian Kirklin},
  title       = {Towards cost-effective test suite prioritization with hill climbing and simulated annealing},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2009},
  number      = {CS09-04},
  type        = {Technical report},
  keywords    = {undergraduate}
}

@techreport{Geiger2008,
  author      = {Joshua Geiger},
  title       = {Using test suite prioritization to avoid database restarts},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2008},
  number      = {CS08-02},
  type        = {Technical report},
  keywords    = {undergraduate}
}

@techreport{Smith2008,
  author      = {Adam M. Smith},
  title       = {Incorporating time into test suite reduction and prioritization: An empirical study},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2008},
  number      = {CS08-05},
  type        = {Technical report},
  keywords    = {undergraduate},
  addendum    = {\goacm}
}

@techreport{Steinman2008,
  author      = {Gavilan Steinman},
  title       = {A comprehensive framework for the regression testing of procedural XML applications},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2008},
  number      = {CS08-06},
  type        = {Technical report},
  keywords    = {undergraduate}
}

@techreport{belanich2007,
  author      = {Michael Belanich},
  title       = {Using knapsack algorithms to store music on resource constrained devices},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2007},
  number      = {CS07-01},
  type        = {Technical report},
  keywords    = {undergraduate},
  addendum    = {\goacm}
}

@techreport{Folk2007,
  author      = {Michael Folk},
  title       = {Dynamic path-based piracy prevention},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2007},
  number      = {CS07-06},
  type        = {Technical report},
  keywords    = {undergraduate},
  addendum    = {\gosecond}
}

@techreport{Johnson2007,
  author      = {Christopher Johnson},
  title       = {Quantifying the impact of test suite reduction},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2007},
  number      = {CS07-09},
  type        = {Technical report},
  keywords    = {undergraduate}
}

@techreport{Blose2006,
  author      = {Brian C. Blose},
  title       = {Creation and implementation of a security policy},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2006},
  number      = {CS06-03},
  type        = {Technical report},
  keywords    = {undergraduate},
  addendum    = {\gofaculty}
}

@techreport{Hixson2006,
  author = {Jesse Hixson},
  title  = {Designing incremental Web systems with AJAX: A study of response time, data transfer, and
            throughput on the Web},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2006},
  number      = {CS06-05},
  type        = {Technical report},
  keywords    = {undergraduate},
  addendum    = {\goacm}
}

@techreport{Allan2006,
  author      = {Christopher Allan},
  title       = {An empirical comparison of the performance of character string representations},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2006},
  number      = {CS06-01},
  type        = {Technical report},
  keywords    = {undergraduate}
}

@techreport{Borres2005,
  author      = {Anthony Borres},
  title       = {An empirical evaluation of the performance of tuple space monitoring},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2005},
  number      = {CS05-01},
  type        = {Technical report},
  keywords    = {undergraduate}
}

@techreport{Johnston2005,
  author      = {Bryan Johnston},
  title       = {Testing database-centric applications in the presence of schema changes},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2005},
  number      = {CS05-04},
  type        = {Technical report},
  keywords    = {undergraduate}
}

@techreport{Kormos2005,
  author      = {Evan Kormos},
  title       = {Testing database-centric Web applications},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2005},
  number      = {CS05-06},
  type        = {Technical report},
  keywords    = {undergraduate}
}

@techreport{Walcott2005,
  author      = {Kristen R. Walcott},
  title       = {Prioritizing regression test suites for time-constrained execution using a genetic algorithm},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2005},
  number      = {CS05-11},
  type        = {Technical report},
  keywords    = {undergraduate},
  addendum    = {\gofaculty \gospace \goacm}
}

@techreport{Figura2005,
  author      = {Jason Figura},
  title       = {A survey of object-oriented databases and their benchmarks},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2005},
  number      = {CS05-03},
  type        = {Technical report},
  keywords    = {undergraduate}
}

@techreport{Casini2004,
  author      = {Anthony Casini},
  title       = {Run-time analysis of Java graphical user interfaces},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2004},
  number      = {CS04-03},
  type        = {Technical report},
  keywords    = {undergraduate}
}

@techreport{Fiedler2004,
  author      = {Daniel Fiedler},
  title       = {Protection against malicious host attacks and the feasibility of encrypting Java class files},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2004},
  number      = {CS04-04},
  type        = {Technical report},
  keywords    = {undergraduate}
}

@techreport{Rummel2005,
  author      = {Matthew J. Rummel},
  title       = {Regression test suite prioritization using data flow information},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2004},
  number      = {CS04-11},
  type        = {Technical report},
  keywords    = {undergraduate},
  addendum    = {\gofaculty \gospace \goacm}
}

@techreport{Clause2003,
  author      = {James Clause},
  title       = {A comparison of load balancing and load sharing for the distribution of test cases},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2003},
  number      = {CS03-02},
  type        = {Technical report},
  keywords    = {undergraduate},
  addendum    = {\goacm}
}

@techreport{DeNapoli2003,
  author      = {Mathew J. DeNapoli},
  title       = {Trading spaces for sure: Implementing transactional functionality in the RDBSpace implementation},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2003},
  number      = {CS03-03},
  type        = {Technical report},
  keywords    = {undergraduate}
}

@techreport{Geary2003,
  author      = {Richard Christian Geary},
  title       = {An examination of load sharing and load balancing techniques for distributing test cases},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2003},
  number      = {CS03-04},
  type        = {Technical report},
  keywords    = {undergraduate},
  addendum    = {\goacm}
}

@techreport{Howell2003,
  author      = {Christopher J. Howell},
  title       = {Implementation and analysis of Java GUI creation frameworks},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2003},
  number      = {CS03-08},
  type        = {Technical report},
  keywords    = {undergraduate},
  addendum    = {\gosecond}
}

@techreport{McNamara2003,
  author      = {Christopher McNamara},
  title       = {Experimenting with distributed genetic grouping algorithms},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2003},
  number      = {CS03-13},
  type        = {Technical report},
  keywords    = {undergraduate},
  addendum    = {\gosecond}
}

@techreport{Arnold2002,
  author      = {Geoffrey C. Arnold},
  title       = {Trading spacings: Implementation and analysis of a relational database JavaSpaces service},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2002},
  number      = {CS02-01},
  type        = {Technical report},
  keywords    = {undergraduate},
  addendum    = {\goacm}
}

@techreport{Douglas2002,
  author      = {Ahmad Rajeh Douglas},
  title       = {The Beowulf Cluster as an educational tool for teaching parallelism},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2002},
  number      = {CS02-06},
  type        = {Technical report},
  keywords    = {undergraduate}
}

@techreport{Hollenbaugh2002,
  author      = {David A. Hollenbaugh},
  title       = {Juggernaut: A tool for mutation testing in Java},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2002},
  number      = {CS02-10},
  type        = {Technical report},
  keywords    = {undergraduate}
}

@techreport{Zorman2002,
  author      = {Brian Zorman},
  title       = {The creation and analysis of a JavaSpace-based distributed genetic grouping algorithm},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2002},
  number      = {CS02-018},
  type        = {Technical report},
  keywords    = {undergraduate},
  addendum    = {\gofaculty}
}

@techreport{Bittman2001,
  author      = {Marcus Bittman},
  title       = {Creating a free, dependable software engineering environment},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2001},
  number      = {CS01-03},
  type        = {Technical report},
  keywords    = {undergraduate}
}

@techreport{Dymond2001,
  author      = {John Dymond},
  title       = {A solution to the screen resolution problem for the World Wide Web},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2001},
  number      = {CS01-06},
  type        = {Technical report},
  keywords    = {undergraduate}
}

@techreport{Gorski2001,
  author      = {Edmund Gorski},
  title       = {An investigation and analysis of the implementation of a three-deep Web-based information processing solution on a network intranet},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2001},
  number      = {CS01-07},
  type        = {Technical report},
  keywords    = {undergraduate}
}

@techreport{Wilson2001,
  author      = {Michael Wilson},
  title       = {TCP over lossy wireless networks: Comparison of algorithms and recommendations},
  institution = {Department of Computer Science, Allegheny College},
  year        = {2001},
  number      = {CS01-018},
  type        = {Technical report},
  keywords    = {undergraduate}
}

% MASTER and PHD THESES

@mastersthesis{Sethiya2011,
  author = {Aarti Sethiya and Akansha Aggarwal and Nidhi Aggarwal},
  title  = {A multi-objective regression testing framework},
  school = {Department of Computer Science, University of Delhi},
  year   = {2011},
  type   = {MSc thesis},
}

@mastersthesis{Bansal2010,
  author = {Ritu Bansal and Nancy Gupta},
  title  = {Coverage monitor for JUnit testing of Java programs with XQuery},
  school = {Department of Computer Science, University of Delhi},
  year   = {2010},
  type   = {MSc thesis},
}

@mastersthesis{Agrawal2009,
  author = {Arpan Agrawal and Ankita Mahajan},
  title  = {An XML-aware regression testing framework},
  school = {Department of Computer Science, University of Delhi},
  year   = {2009},
  type   = {MSc thesis},
}

@phdthesis{Just2012,
  author = {Ren\'{e} Just},
  title  = {On effective and efficient mutation analysis for unit and integration testing},
  school = {Institute for Applied Information Processing, University of Ulm},
  year   = {2012},
  type   = {PhD thesis},
  keywords = {supervised}
}

@phdthesis{Walcott2012,
  author = {Kristen R. Walcott-Justice},
  title  = {Testing in resource-constrained environments},
  school = {Department of Computer Science, University of Virginia},
  year   = {2012},
  type   = {PhD Thesis}
}

% SUPERVISED PRESENTATIONS

@misc{Bhadra2008,
  author        = {Suvarshi Bhadra and Alexander P. Conrad and Adam M. Smith},
  title         = {Research in experimental computer science},
  howpublished  = {Allegheny College Research Seminar Series},
  year          = {2008},
  keywords      = {supervised}
}

@misc{Conrad2008,
  author        = {Alexander P. Conrad},
  title         = {Using genetic algorithms to improve test suite prioritizations},
  howpublished  = {Undergraduate Research at the Capitol of Pennsylvania and Allegheny College Summer Research Symposium},
  year          = {2008},
  keywords      = {supervised}
}

@misc{Devine2008,
  author        = {James Devine},
  title         = {The real cost of operating system virtualization},
  howpublished  = {Allegheny College Research in Computer Science Seminar},
  year          = {2008},
  keywords      = {supervised}
}

@misc{Folk2007p,
  author        = {Michael Folk},
  title         = {Software piracy prevention},
  howpublished  = {Allegheny College Research in Computer Science Seminar},
  year          = {2007},
  keywords      = {supervised}
}

@misc{Folk2007pa,
  author        = {Michael Folk},
  title         = {Dynamic path-based software piracy prevention},
  howpublished  = {Allegheny College Senior Project Celebration},
  year          = {2007},
  keywords      = {supervised}
}

@misc{Johnson2007p,
  author        = {Christopher Johnson},
  title         = {Quantifying the impact of test suite reduction},
  howpublished  = {Allegheny College Senior Project Celebration},
  year          = {2007},
  keywords      = {supervised}
}

@misc{Smith2007,
  author        = {Adam M. Smith},
  title         = {Turning scribbles into science: A tale of undergraduate research},
  howpublished  = {Allegheny College Research in Computer Science Seminar},
  year          = {2007},
  keywords      = {supervised}
}

@misc{Geiger2007,
  author        = {Joshua J. Geiger},
  title         = {Avoiding database restarts with test suite prioritization},
  howpublished  = {Undergraduate Research at the Capitol of Pennsylvania and Allegheny College Summer Research Symposium},
  year          = {2007},
  keywords      = {supervised}
}

@misc{Smith2007a,
  author        = {Adam M. Smith},
  title         = {Using call trees for test suite reduction and prioritization},
  howpublished  = {Allegheny College Summer Research Symposium},
  year          = {2007},
  keywords      = {supervised}
}

@misc{Steinman2006,
  author        = {Gavilan Steinman},
  title         = {A divide and conquer approach to developing Web applications},
  howpublished  = {Allegheny College Research in Computer Science Seminar},
  year          = {2006},
  keywords      = {supervised}
}

@misc{Borres2005a,
  author        = {Anthony Borres},
  title         = {An empirical evaluation of tuple space monitoring and its impact on space performance},
  howpublished  = {Allegheny College Senior Project Celebration},
  year          = {2005},
  keywords      = {supervised}
}

@misc{Kormos2005a,
  author        = {Evan Kormos},
  title         = {Testing database-centric Web applications},
  howpublished  = {Allegheny College Senior Project Celebration},
  year          = {2005},
  keywords      = {supervised}
}

@misc{Walcott2005a,
  author        = {Kristen R. Walcott},
  title         = {Prioritizing the execution of time-constrained regression test suites},
  howpublished  = {Allegheny College Senior Project Celebration},
  year          = {2005},
  keywords      = {supervised}
}

